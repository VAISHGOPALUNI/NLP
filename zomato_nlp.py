# -*- coding: utf-8 -*-
"""zomato_nlp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1chQe3rHW4bhvoNtO4forHMEb_8tj0q0M
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

uploaded = files.upload()

dataset = pd.read_csv("Restaurant reviews.csv")
dataset = dataset.dropna()
dataset = dataset.drop(dataset[dataset['Rating']=='Like'].index.values)
dataset.reset_index(inplace=True)

data = pd.DataFrame(dataset[['Review','Rating']])

data



import re
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords 
from nltk.stem.porter import PorterStemmer 
ps = PorterStemmer()
data_review=[]

import math
for i in range(0,9954): 
    p1=data["Review"][i]
    p1=re.sub('[^a-zA-Z]'," ",p1)
    p1= p1.lower()
    p1 = p1.split()
    p1 = [ps.stem(word) for word in p1 if not word in set(stopwords.words('english'))]
    p1= ' '.join(p1)
    data_review.append(p1)
    temp = data['Rating'][i].split(".")
    if(temp[0]=='1'):
      data['Rating'][i]="Poor"
    elif(temp[0]=='2'):
      data['Rating'][i]="Fair"
    elif(temp[0]=='3'):
      data['Rating'][i]="Average"
    elif(temp[0]=='4') :
      data['Rating'][i]="Good"
    elif(temp[0]=='5'):
      data['Rating'][i]="Excellent"
print(data)



from sklearn.preprocessing import LabelEncoder,OneHotEncoder
le = LabelEncoder()
data['Rating'] = le.fit_transform(data['Rating'])
print(data)
y = data.iloc[:,1:2].values
print(y)

one_hot_encoder = OneHotEncoder()
z = one_hot_encoder.fit_transform(y[:,0:1]).toarray()
y = np.delete(y,[0],axis=1)
y = np.concatenate((z,y),axis=1)
print(y.shape)

#count vector
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features = 11000)
x = cv.fit_transform(data_review).toarray()
import pickle
with open('CountVectorizer','wb') as file:
  pickle.dump(cv,file)
from sklearn.model_selection import train_test_split
x_train,x_test ,y_train,y_test = train_test_split(x,y,random_state = 0,test_size = 0.2)
x_train.shape

from keras.models import Sequential
from keras.layers import Dense
model = Sequential() 
model.add(Dense(units =10772,init = 'random_uniform',activation = 'relu'))
model.add(Dense(units =11000,init = 'random_uniform',activation = 'relu'))
model.add(Dense(units =12000,init = 'random_uniform',activation = 'relu'))
model.add(Dense(units = 5,init = 'random_uniform',activation = 'softmax'))
model.compile (optimizer = 'adam',loss = 'categorical_crossentropy',metrics = ['accuracy'])
model.fit(x_train,y_train,epochs =10 ,batch_size = 64)

y_pred = model.predict_classes(x_test)
print(y_pred)
print(y_test)

model.save('zomato_nlp.h5')

y_p = model.predict_classes(cv.transform(["the food was okay"]))
names = ["average","Excellent","Fair","Good","Poor"]
print(names[y_p[0]])

